const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();  // Instanciando o Prisma Client
const { askGemma } = require('./localGptResponder');

/**
 * Carrega o contexto da corretora a partir do banco de dados
 * @returns {Promise<Object>} - Contexto com informa√ß√µes da empresa e corretores
 */
async function loadCorretoraContext() {
  try {
    const empresa = await prisma.empresa.findFirst();
    const corretores = await prisma.corretor.findMany();

    return {
      empresa: empresa.nome,
      endereco: empresa.endereco,
      instagram: empresa.instagram,
      corretores: corretores.map(c => c.nome),
    };
  } catch (error) {
    console.error('Erro ao carregar os dados da corretora:', error);
    return null;
  }
}

/**
 * Gera uma resposta inteligente com base no contexto da corretora de im√≥veis
 * @param {string} userMessage - A mensagem do cliente
 * @param {Array} conversationHistory - Hist√≥rico das mensagens trocadas
 * @returns {Promise<string>} - Resposta gerada pela IA
 */
async function gerarRespostaIA(userMessage, conversationHistory = []) {
  const contexto = await loadCorretoraContext();

  if (!contexto) {
    return 'Desculpe, houve um erro ao carregar os dados da corretora.';
  }

  // Constru√ß√£o do hist√≥rico da conversa com o contexto
  const conversationContext = conversationHistory.map((msg, idx) => {
    return `${idx % 2 === 0 ? "Cliente" : "Assistente"}: ${msg}`;
  }).join("\n");

  const prompt = `
Voc√™ √© um assistente virtual cordial e profissional da corretora de im√≥veis "${contexto.empresa}". 
Seu papel √© atender os clientes via WhatsApp, responder d√∫vidas e ajudar a agendar visitas aos im√≥veis com base nas informa√ß√µes abaixo:

üìç Endere√ßo: ${contexto.endereco}
Instagram: ${contexto.instagram}

üßë‚Äçüíº Corretores dispon√≠veis:
${contexto.corretores.map(c => '- ' + c).join('\n')}

üí° Como agir:
- Se o cliente disser apenas "Oi", "Ol√°", "Bom dia", etc., d√™ boas-vindas e diga o nome da corretora.
- Se o cliente quiser agendar uma visita, pe√ßa o nome do corretor e agende a visita.
- Seja direto, cordial e √∫til. Sempre se ofere√ßa para continuar ajudando.

Hist√≥rico de conversa:
${conversationContext}

Mensagem do cliente: "${userMessage}"
`;

  // Passando o prompt din√¢mico com o hist√≥rico acumulado
  return await askGemma(prompt);
}

module.exports = {
  gerarRespostaIA,
};
